name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Ensure we don't have concurrent builds for the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Single job that combines validation, tests, and build
  build:
    name: Test & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for git operations

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      # Lint code
      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=5m

      # Run tests with race detection (but skip integration tests in PRs)
      - name: Run tests
        run: |
          # For PRs, skip slow integration tests
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            go test -mod=vendor -race -skip "^TestIntegration|^TestE2E" ./...
          else
            # For main branch, run all tests
            go test -mod=vendor -race ./...
          fi

      # Validate configurations
      - name: Validate configurations
        run: |
          bash scripts/validation/validate_policy_schema.sh
          bash scripts/validation/validate_config_schema.sh

      # Build binary
      - name: Build
        run: go build -mod=vendor -o bin/sa-omf-otelcol ./cmd/sa-omf-otelcol

      # Upload artifacts for main branch only
      - name: Upload build artifacts
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: binary
          path: bin/sa-omf-otelcol
          retention-days: 7

  # Only run benchmarks when requested via label
  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    # Only run benchmarks on workflow_dispatch or if PR is labeled with "run-benchmarks"
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'run-benchmarks') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Run benchmarks
        run: go test -mod=vendor -run=^$ -bench=. -benchmem ./...
        continue-on-error: true

  # Build and push Docker image for main branch
  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: deploy/docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/sa-omf-collector:latest
            ghcr.io/${{ github.repository_owner }}/sa-omf-collector:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max