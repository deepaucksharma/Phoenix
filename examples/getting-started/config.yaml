receivers:
  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
      memory:
      load:
      disk:
      filesystem:
      network:
      process:

processors:
  priority_tagger:
    resource_attributes:
      "process.name":
        - pattern: ".*database.*"
          priority: high
        - pattern: ".*api.*"
          priority: high
        - pattern: ".*worker.*"
          priority: medium
        - default_priority: low

  adaptive_topk:
    k_value: 10
    k_min: 5
    k_max: 30
    resource_field: "process.name"
    counter_field: "cpu.usage"
    enabled: true

  adaptive_pid:
    controllers:
      - name: "coverage_controller"
        enabled: true
        kpi_metric_name: "aemf_impact_adaptive_topk_resource_coverage_percent_avg_1m"
        kpi_target_value: 0.9
        kp: 10.0
        ki: 0.0
        kd: 0.0
        output_config_patches:
          - target_processor_name: "adaptive_topk"
            parameter_path: "k_value"
            change_scale_factor: 1.0
            min_value: 5
            max_value: 30

exporters:
  pic_connector:
    pic_control_endpoint: "localhost:8989"
    max_queue_size: 100
    timeout: 5s
  
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: "saomf"
    const_labels:
      environment: "demo"

extensions:
  pic_control_ext:
    policy_file_path: "policy.yaml"
    max_patches_per_minute: 10
    patch_cooldown_seconds: 30

service:
  pipelines:
    metrics:
      receivers: [hostmetrics]
      processors: [priority_tagger, adaptive_topk]
      exporters: [prometheus]
    
    metrics/control:
      receivers: [hostmetrics]
      processors: [adaptive_pid]
      exporters: [pic_connector, prometheus]
  
  extensions: [pic_control_ext]