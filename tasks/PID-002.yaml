id: PID-002
title: "Add validation for initial PID gains in controller constructor"
state: open
priority: low
created_at: "2025-05-20"
assigned_to: "implementer"
area: internal/control/pid
depends_on: []
acceptance:
  - "Constructor validates PID gains for sanity"
  - "Error returned for invalid gain values"
  - "Backwards compatibility maintained when possible"
  - "Tests verify validation behavior"
  - "Documentation updated to reflect validation"
description: |
  The PID controller's constructor currently doesn't validate the initial gain
  values (Kp, Ki, Kd), which could allow negative or otherwise invalid values
  to be used. This task requires adding validation to the constructor to ensure
  that reasonable gain values are used.
  
  Current constructor:
  ```go
  // NewController creates a new PID controller with the specified gains
  func NewController(kp, ki, kd, setpoint float64) *Controller {
      return &Controller{
          kp:                kp,
          ki:                ki,
          kd:                kd,
          setpoint:          setpoint,
          lastError:         0,
          integral:          0,
          lastTime:          time.Now(),
          integralLimit:     1000, // Default, can be changed with SetIntegralLimit
          outputMin:         -1000,
          outputMax:         1000,
          antiWindupEnabled: true,  // Enable anti-windup by default
          antiWindupGain:    1.0,   // Default gain for anti-windup
      }
  }
  ```
  
  The implementation should:
  
  1. Add validation for gain values:
     - Check that Kp is non-negative (special case: Kp=0 should be allowed for I-only or D-only control)
     - Check that Ki is non-negative (Ki=0 allowed for P-only or D-only control)
     - Check that Kd is non-negative (Kd=0 allowed for P-only or I-only control)
     - Optionally check for reasonable maximum values
  
  2. Return an error for invalid gain values:
     - The function signature should be updated to return an error
     - Existing callers should be updated to check the error
     - Clear error messages should indicate which gain is invalid
  
  3. Maintain backwards compatibility where possible:
     - Consider providing a compatibility constructor that doesn't return an error
     - Document the validation rules clearly
  
  4. Add tests to verify validation behavior:
     - Test with valid gain values
     - Test with invalid gain values
     - Test with edge cases
  
  5. Update documentation to reflect the validation rules:
     - Update function comments
     - Update the PID controller documentation
     - Update examples to show error handling
