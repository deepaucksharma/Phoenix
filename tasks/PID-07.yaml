id: PID-07
title: "Implement PID Output Parameter Out of Bounds Test"
state: open
priority: high
created_at: "2025-05-20"
assigned_to: "tester"
area: "test/e2e/pid"
depends_on: []
acceptance:
  - "Test forces PID controller to suggest out-of-bounds parameter value"
  - "pid_decider or pic_control clamps value to defined min/max bounds"
  - "aemf_pid_output_clamped_total metric increments"
  - "System logs appropriate warning about clamping"
  - "Target processor receives value within allowed bounds"
  - "System remains stable despite extreme PID output"
description: |
  PID controllers may occasionally generate output values that exceed the
  allowable bounds for processor parameters. This test verifies that the
  system correctly clamps these values to the defined min_value/max_value
  range before creating configuration patches.
  
  The test should:
  
  1. Configure a PID controller with high gain to amplify error:
     ```yaml
     controllers:
       - name: "coverage_controller"
         enabled: true
         kpi_metric_name: "aemf_impact_adaptive_topk_resource_coverage_percent_avg_1m"
         kpi_target_value: 0.9
         kp: 500  # Very high to ensure overshooting bounds
         # ...
         output_config_patches:
           - target_processor_name: "adaptive_topk"
             parameter_path: "k_value"
             change_scale_factor: 1.0
             min_value: 5
             max_value: 100
     ```
  2. Generate metrics that create a large error value
  3. Verify clamping behavior:
     - Raw PID output exceeds bounds (visible in metrics)
     - pid_decider clamps value to min_value or max_value
     - aemf_pid_output_clamped_total metric increments
     - Logs indicate value was clamped
  4. Verify patch creation and application:
     - Created patch contains value clamped to bounds
     - Target processor receives value within allowed range
     - System remains stable despite extreme controller output
  5. Test both upper and lower bound clamping
  
  This test is critical for ensuring safety guardrails in the autonomous
  adaptation system, preventing extreme parameter values that could
  cause system instability or resource exhaustion.
  
  Implementation should include verification that the clamping occurs
  at the appropriate layer (pid_decider when generating patches, or
  pic_control when validating patches) according to the architecture.