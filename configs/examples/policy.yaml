global_settings:
  autonomy_level: shadow  # Start in shadow mode for safety
  collector_cpu_safety_limit_mcores: 400
  collector_rss_safety_limit_mib: 350

processors_config:
  metric_pipeline:
    resource_filter:
      enabled: true
      filter_strategy: hybrid
      priority_attribute: "aemf.process.priority"
      priority_rules:
        - match: "process.command_line=~/.*java.*/"
          priority: high
        - match: "process.name=~/nginx|httpd/"
          priority: high
        - match: "process.name=~/mysql|postgres|mongodb/"
          priority: critical
        - match: "process.command_line=~/.*python.*/"
          priority: medium
        - match: ".*"
          priority: low
      topk:
        k_value: 25
        k_min: 10
        k_max: 50
        resource_field: "process.executable.name"
        counter_field: "process.cpu.utilization"
        coverage_target: 0.95
      rollup:
        enabled: false
        strategy: "sum"
        priority_threshold: "low"
        name_prefix: "others"

  cardinality_guardian:
    enabled: false
    max_unique: 1000
  
  reservoir_sampler:
    enabled: false
    reservoir_size: 100
  
pid_decider_config:
  controllers:
    - name: coverage_controller
      enabled: true
      kpi_metric_name: aemf_impact_adaptive_topk_resource_coverage_percent_avg_1m
      kpi_target_value: 0.90
      kp: 30
      ki: 5
      kd: 0
      hysteresis_percent: 3
      output_config_patches:
        - target_processor_name: metric_pipeline
          parameter_path: resource_filter.topk.k_value
          change_scale_factor: -20.0
          min_value: 10
          max_value: 60

pic_control_config:
  policy_file_path: /etc/sa-omf/policy.yaml
  max_patches_per_minute: 3
  patch_cooldown_seconds: 10
  safe_mode_processor_configs:
    metric_pipeline:
      resource_filter:
        topk:
          k_value: 10
    cardinality_guardian:
      max_unique: 100

service:
  extensions: [pic_control, health_check]
  pipelines:
    metrics:
      receivers: [hostmetrics]
      processors: [metric_pipeline]
      exporters: [prometheusremotewrite]
    control:
      receivers: [prometheus/self]
      processors: [pid_decider]
      exporters: [pic_connector]

