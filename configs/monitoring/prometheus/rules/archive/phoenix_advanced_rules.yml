groups:
  # Cardinality Analysis Rules
  - name: phoenix_cardinality_analysis
    interval: 30s
    rules:
      # Z-score for cardinality anomaly detection
      - record: phoenix:cardinality_zscore
        expr: |
          (
            phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate
            - 
            avg_over_time(phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate[1h])
          ) 
          / 
          stddev_over_time(phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate[1h])

      # Cardinality growth rate
      - record: phoenix:cardinality_growth_rate
        expr: |
          rate(phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate[5m])

      # Cardinality explosion risk score (0-100)
      - record: phoenix:cardinality_explosion_risk
        expr: |
          clamp_max(
            (
              phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate 
              / 
              50000
            ) * 100,
            100
          )

      # Predicted cardinality in 1 hour
      - record: phoenix:cardinality_prediction_1h
        expr: |
          predict_linear(
            phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate[30m],
            3600
          )

  # Cost Analysis Rules
  - name: phoenix_cost_analysis
    interval: 60s
    rules:
      # Estimated cost per pipeline (USD/hour)
      - record: phoenix:cost_per_pipeline
        expr: |
          (
            rate(otelcol_processor_accepted_metric_points{pipeline=~"metrics/.*"}[5m]) 
            * 
            0.0000001  # Cost per metric point
          ) * 3600
        labels:
          currency: "USD"
          period: "hourly"

      # Total estimated monthly cost
      - record: phoenix:estimated_monthly_cost_usd
        expr: |
          sum(phoenix:cost_per_pipeline) * 24 * 30

      # Cost efficiency score (datapoints per dollar)
      - record: phoenix:cost_efficiency_score
        expr: |
          sum(rate(otelcol_processor_accepted_metric_points[5m])) 
          / 
          sum(phoenix:cost_per_pipeline)

      # Cost per million datapoints
      - record: phoenix:cost_per_million_datapoints
        expr: |
          (sum(phoenix:cost_per_pipeline) / sum(rate(otelcol_processor_accepted_metric_points[5m]))) * 1000000

      # Cardinality reduction percentage
      - record: phoenix:cardinality_reduction_percentage
        expr: |
          (
            1 - 
            (
              phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate{pipeline="metrics/optimised"}
              /
              phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate{pipeline="metrics/full_fidelity"}
            )
          ) * 100

  # Pipeline Efficiency Rules
  - name: phoenix_pipeline_efficiency
    interval: 30s
    rules:
      # Pipeline efficiency percentage
      - record: phoenix:pipeline_efficiency_percentage
        expr: |
          (
            rate(otelcol_processor_accepted_metric_points[5m])
            /
            (rate(otelcol_processor_accepted_metric_points[5m]) + rate(otelcol_processor_refused_metric_points[5m]))
          ) * 100

      # Pipeline throughput per CPU core
      - record: phoenix:pipeline_throughput_per_core
        expr: |
          rate(otelcol_processor_accepted_metric_points[5m])
          /
          rate(process_cpu_seconds_total{service_name=~"otelcol.*"}[5m])

      # Memory efficiency (datapoints per MB)
      - record: phoenix:memory_efficiency
        expr: |
          rate(otelcol_processor_accepted_metric_points[5m])
          /
          (process_resident_memory_bytes{service_name=~"otelcol.*"} / 1024 / 1024)

      # Pipeline queue saturation
      - record: phoenix:pipeline_queue_saturation
        expr: |
          (
            otelcol_processor_batch_batch_send_size_sum
            /
            otelcol_processor_batch_batch_send_size_count
          )
          /
          10000  # max batch size

      # Processor effectiveness score
      - record: phoenix:processor_effectiveness_score
        expr: |
          (
            1 - 
            (
              rate(otelcol_processor_refused_metric_points[5m])
              /
              rate(otelcol_receiver_accepted_metric_points[5m])
            )
          ) * 100

  # ML/Anomaly Detection Preparation Rules
  - name: phoenix_ml_features
    interval: 60s
    rules:
      # Seasonality component (hourly)
      - record: phoenix:hourly_seasonality_component
        expr: |
          avg_over_time(
            phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate[1h:5m]
          ) by (pipeline, hour)

      # Weekly pattern baseline
      - record: phoenix:weekly_baseline
        expr: |
          avg_over_time(
            phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate[7d:1h]
          )

      # Anomaly score based on deviation from baseline
      - record: phoenix:anomaly_score
        expr: |
          abs(
            phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate
            -
            phoenix:weekly_baseline
          )
          /
          phoenix:weekly_baseline

      # Trend strength indicator
      - record: phoenix:trend_strength
        expr: |
          abs(
            (
              phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate
              -
              phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate offset 1h
            )
            /
            phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate offset 1h
          )

  # Optimization Impact Rules
  - name: phoenix_optimization_impact
    interval: 60s
    rules:
      # Data loss percentage per optimization mode
      - record: phoenix:optimization_data_loss_percentage
        expr: |
          label_replace(
            (
              1 -
              (
                sum by (optimization_mode) (rate(otelcol_processor_accepted_metric_points{pipeline="metrics/optimised"}[5m]))
                /
                sum(rate(otelcol_processor_accepted_metric_points{pipeline="metrics/full_fidelity"}[5m]))
              )
            ) * 100,
            "optimization_mode", "$1", "optimization_mode", "(.*)"
          )

      # Latency impact by optimization mode
      - record: phoenix:optimization_latency_impact
        expr: |
          histogram_quantile(0.95,
            sum by (optimization_mode, le) (
              rate(otelcol_processor_batch_batch_send_size_bucket{pipeline="metrics/optimised"}[5m])
            )
          )

      # Resource savings by optimization mode
      - record: phoenix:optimization_resource_savings
        expr: |
          (
            process_resident_memory_bytes{service_name="otelcol-main",pipeline="metrics/full_fidelity"}
            -
            process_resident_memory_bytes{service_name="otelcol-main",pipeline="metrics/optimised"}
          )
          /
          process_resident_memory_bytes{service_name="otelcol-main",pipeline="metrics/full_fidelity"}
          * 100

  # Health and SLI Rules
  - name: phoenix_health_sli
    interval: 30s
    rules:
      # Overall system health score (0-100)
      - record: phoenix:system_health_score
        expr: |
          (
            (
              avg(up{job=~"otel-collector.*|prometheus|grafana"}) * 25
            )
            +
            (
              (1 - avg(rate(otelcol_processor_refused_metric_points[5m]) / rate(otelcol_receiver_accepted_metric_points[5m]))) * 25
            )
            +
            (
              clamp_max(100 - phoenix:cardinality_explosion_risk, 25)
            )
            +
            (
              avg(phoenix:pipeline_efficiency_percentage) * 0.25
            )
          )

      # Data freshness SLI
      - record: phoenix:data_freshness_sli
        expr: |
          (
            time() - max(prometheus_tsdb_lowest_timestamp_seconds)
          ) < 300  # Less than 5 minutes old

      # Pipeline availability SLI
      - record: phoenix:pipeline_availability_sli
        expr: |
          avg_over_time(up{job=~"otel-collector.*"}[5m])

      # Error rate by pipeline
      - record: phoenix:pipeline_error_rate
        expr: |
          rate(otelcol_processor_refused_metric_points[5m])
          /
          rate(otelcol_receiver_accepted_metric_points[5m])

  # Capacity Planning Rules
  - name: phoenix_capacity_planning
    interval: 5m
    rules:
      # Days until cardinality limit
      - record: phoenix:days_until_cardinality_limit
        expr: |
          (
            50000 - phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate
          )
          /
          (
            rate(phoenix_observer_kpi_store_phoenix_pipeline_output_cardinality_estimate[24h]) * 86400
          )

      # Memory headroom percentage
      - record: phoenix:memory_headroom_percentage
        expr: |
          (
            1 -
            (
              process_resident_memory_bytes{service_name=~"otelcol.*"}
              /
              container_spec_memory_limit_bytes{pod=~"otel-collector.*"}
            )
          ) * 100

      # Projected monthly data volume (TB)
      - record: phoenix:projected_monthly_volume_tb
        expr: |
          (
            sum(rate(otelcol_processor_accepted_metric_points[1h])) * 86400 * 30 * 8  # 8 bytes per point
          )
          /
          1099511627776  # TB in bytes

      # Required collector instances for current load
      - record: phoenix:required_collector_instances
        expr: |
          ceil(
            sum(rate(otelcol_receiver_accepted_metric_points[5m]))
            /
            1000000  # 1M points per instance
          )