# Production OpenTelemetry Collector Configuration
# Enhanced security, performance, and reliability settings

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
        tls:
          cert_file: /etc/otel/tls/server.crt
          key_file: /etc/otel/tls/server.key
          ca_file: /etc/otel/tls/ca.crt
          client_ca_file: /etc/otel/tls/ca.crt
          min_version: "1.3"
        auth:
          authenticator: bearer_token
        max_recv_msg_size_mib: 16
        max_concurrent_streams: 100
        keepalive:
          server_parameters:
            max_connection_idle: 11s
            max_connection_age: 30s
            max_connection_age_grace: 5s
            time: 30s
            timeout: 10s
      http:
        endpoint: "0.0.0.0:4318"
        tls:
          cert_file: /etc/otel/tls/server.crt
          key_file: /etc/otel/tls/server.key
          ca_file: /etc/otel/tls/ca.crt
          min_version: "1.3"
        cors:
          allowed_origins: []  # Explicitly no CORS in production
        max_request_body_size: 16777216  # 16MB

processors:
  # Enhanced memory limiter for production
  memory_limiter:
    check_interval: 1s
    limit_percentage: 80
    spike_limit_percentage: 90
    
  # Production batch settings
  batch:
    timeout: 10s
    send_batch_size: 10000
    send_batch_max_size: 15000
    
  # Resource detection with cloud metadata
  resource:
    attributes:
      - key: deployment.environment
        value: production
        action: upsert
      - key: cloud.provider
        from_attribute: CLOUD_PROVIDER
        action: insert
      - key: cloud.region
        from_attribute: CLOUD_REGION
        action: insert
      
  # Security: Remove sensitive attributes
  attributes/security:
    actions:
      - key: process.command_line
        action: delete
      - key: process.environment_variables
        action: delete
      - key: http.request.header.authorization
        action: delete
      - key: http.request.header.x-api-key
        action: delete
      
  # Rate limiting
  spanmetrics/ratelimit:
    dimensions_cache_size: 100000
    aggregation_temporality: AGGREGATION_TEMPORALITY_CUMULATIVE

exporters:
  # Production Prometheus with TLS
  prometheus/full:
    endpoint: "0.0.0.0:8888"
    tls:
      cert_file: /etc/otel/tls/server.crt
      key_file: /etc/otel/tls/server.key
    const_labels:
      pipeline: "full_fidelity"
      environment: "production"
      
  prometheus/optimized:
    endpoint: "0.0.0.0:8889"
    tls:
      cert_file: /etc/otel/tls/server.crt
      key_file: /etc/otel/tls/server.key
    const_labels:
      pipeline: "optimized"
      environment: "production"
      
  prometheus/experimental:
    endpoint: "0.0.0.0:8890"
    tls:
      cert_file: /etc/otel/tls/server.crt
      key_file: /etc/otel/tls/server.key
    const_labels:
      pipeline: "experimental"
      environment: "production"
      
  # New Relic with enhanced retry
  otlp/new_relic:
    endpoint: "${env:NEW_RELIC_OTLP_ENDPOINT}"
    headers:
      api-key: "${env:NEW_RELIC_LICENSE_KEY}"
    tls:
      insecure: false
      insecure_skip_verify: false
      ca_file: /etc/ssl/certs/ca-certificates.crt
    compression: gzip
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 300s
      max_elapsed_time: 3600s
      multiplier: 2
    sending_queue:
      enabled: true
      num_consumers: 10
      queue_size: 10000
      storage: file_storage/new_relic
    timeout: 30s

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    tls:
      cert_file: /etc/otel/tls/server.crt
      key_file: /etc/otel/tls/server.key
      
  pprof:
    endpoint: 127.0.0.1:1777  # Local only in production
    
  bearer_token_auth:
    token: "${env:OTEL_AUTH_TOKEN}"
    
  file_storage/new_relic:
    directory: /var/lib/otel/file_storage
    timeout: 10s
    compaction:
      directory: /var/lib/otel/file_storage
      on_start: true
      on_rebound: true
      max_transaction_size: 65536
      
  # Production metrics
  prometheus:
    endpoint: 0.0.0.0:8888
    
service:
  extensions: [health_check, pprof, bearer_token_auth, file_storage/new_relic, prometheus]
  
  pipelines:
    metrics/full_fidelity:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource, attributes/security]
      exporters: [prometheus/full, otlp/new_relic]
      
    metrics/optimized:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource, attributes/security, attributes/optimize, metricstransform/aggregate]
      exporters: [prometheus/optimized, otlp/new_relic]
      
    metrics/experimental:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource, attributes/security, probabilistic_sampler]
      exporters: [prometheus/experimental]
      
  telemetry:
    logs:
      level: info
      initial_fields:
        service: otel-collector
        environment: production
    metrics:
      level: detailed
      address: 0.0.0.0:8888
      
    # Resource limits
    resource:
      attributes:
        service.name: "phoenix-otel-collector"
        service.version: "${env:SERVICE_VERSION}"
        deployment.environment: "production"